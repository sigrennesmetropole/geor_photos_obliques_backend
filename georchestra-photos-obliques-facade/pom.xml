<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.georchestra</groupId>
        <artifactId>georchestra-photos-obliques-backend</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    
    <artifactId>georchestra-photos-obliques-facade</artifactId>
    <name>georchestra-photos-obliques-facade</name>
    
    <properties>
        <resource-directory>${project.basedir}/../resources/openapi</resource-directory>
        <resource-generation-directory>${project.basedir}/../resources/openapi/generation</resource-generation-directory>
        <infinispan.version>10.1.8.Final</infinispan.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>georchestra-photos-obliques-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Server Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
		</dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-models</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jasig.cas.client</groupId>
            <artifactId>cas-client-support-springboot</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <configuration>
                    <modelPackage>org.georchestra.photosobliques.core.bean</modelPackage>
                    <generatorName>spring</generatorName>
                    <library>spring-boot</library>
                    <generateModelTests>false</generateModelTests>
                    <generateModelDocumentation>false</generateModelDocumentation>
                    <generateSupportingFiles>true</generateSupportingFiles>
                    <generateApiDocumentation>true</generateApiDocumentation>
                    <generateApis>true</generateApis>
                    <generateModels>false</generateModels>
                    <generateApiTests>false</generateApiTests>
                    <templateDirectory>${resource-generation-directory}
                    </templateDirectory>
                    <verbose>false</verbose>
                    <typeMappings>
                        <typeMapping>OffsetDateTime=java.time.LocalDateTime</typeMapping>
                    </typeMappings>
                    <configOptions>
                        <interfaceOnly>true</interfaceOnly>
                        <dateLibrary>java8</dateLibrary>
                        <serializableModel>true</serializableModel>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-controllers-api</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Les interfaces sont généres dans la target, c'est normal -->
                            <apiPackage>org.georchestra.photosobliques.facade.controller.api</apiPackage>
                            <inputSpec>${resource-directory}/photos-obliques-api.json</inputSpec>
                            <importMappings>
                                ReportInformation=org.georchestra.photosobliques.common.core.bean.ReportInformation,
                                AsyncInformation=org.georchestra.photosobliques.common.core.bean.AsyncInformation,
                                HistoricDataPageResult=org.georchestra.photosobliques.common.core.bean.HistoricDataPageResult
                            </importMappings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <resources>
                        <resource>
                            <directory>src/main/resources</directory>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
					<finalName>${project.artifactId}</finalName>
                    <excludes>
                        <exclude>**/log4j2.xml</exclude>
                        <exclude>**/photos-obliques.properties</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- JAR executable Spring Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
						</goals>
						<configuration>
							<executable>true</executable>
                    		<finalName>${project.artifactId}</finalName>
						</configuration>
					</execution>
                </executions>
            </plugin>
            <!-- War Spring Boot -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>a-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>			
							<finalName>${project.artifactId}</finalName>				
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>
								%regex[WEB-INF/lib/mapstruct-.*\.jar],
								%regex[WEB-INF/lib/spring-boot-devtools-.*\.jar],
								%regex[WEB-INF/lib/spring.*-test-.*\.jar]
							</packagingExcludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
    <profiles>
		<profile>
			<id>docker</id>
			<properties>
				<packageDatadirScmVersion>master</packageDatadirScmVersion>
				<dockerImageName>sigrennesmetropole/geor_photos_obliques_backend</dockerImageName>
				<dockerDatadirScmUrl>scm:git:https://github.com/georchestra/datadir.git</dockerDatadirScmUrl>
				<dockerDatadirScmVersion>docker-${packageDatadirScmVersion}</dockerDatadirScmVersion>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.2.2</version>
						<dependencies>
							<dependency>
								<groupId>com.google.guava</groupId>
								<artifactId>guava</artifactId>
								<version>33.2.0-jre</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<imageName>${dockerImageName}</imageName>
							<imageTags>
								<imageTag>${project.version}</imageTag>
								<imageTag>latest</imageTag>
							</imageTags>
							<!-- chemin relatif depuis le target du présent projet -->
							<dockerDirectory>${project.basedir}/../docker/photosobliques</dockerDirectory>

							<!-- This will require to set up the docker-hub credentials correctly
								into your ~/.m2/settings.xml, see: https://github.com/spotify/docker-maven-plugin#authenticating-with-private-registries -->
							<serverId>docker-hub</serverId>
							<registryUrl>https://index.docker.io/v1/</registryUrl>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
        <!-- Profil de développement local -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
            </properties>
        </profile>
        <!-- Profil de développement local sur docker -->
        <profile>
            <id>dev-docker</id>
            <properties>
                <spring.profiles.active>dev-docker</spring.profiles.active>
            </properties>
        </profile>
        <!-- Profil de intégration -->
        <profile>
            <id>ic</id>
            <properties>
                <spring.profiles.active>ic</spring.profiles.active>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
            </properties>
        </profile>
    </profiles>
</project>
